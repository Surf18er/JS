5 задание

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Необходимо скопировать и вставить в данный скрипт все функции из 4 задания.
Необходимо реализовать функцию:
mathOperation(arg1, arg2, operation);
Параметры:
arg1 - первое число.
arg2 - второе число.
operation - строка, которая содержит один символ из: "+", "-", "*", "/".
Функция mathOperation должна вернуть результат операции, который был передан в
параметр operation для двух первых аргументов (arg1 и arg2).
Функция mathOperation должна использовать для вычисления функции из 4 задания.

Примеры вызова функции:
console.log(mathOperation(5, 3, "+")); // 8
console.log(mathOperation(5, 3, ":)")); // NaN

Функции mathOperation всегда передаются корректные числа, проверки на NaN,
Infinity делать не нужно, однако, в случае если был передан некорректный
аргумент в параметр operation, необходимо вернуть NaN.

Необходимо для всех функций прописать комментарии jsdoc https://jsdoc.app/.
-->
<script>
  "use strict";
  function sum(a, b) {
    return a + b;
  }
  function min(a, b) {
    if (a > b) {
      return a - b;
    }
    return b - a;
  }
  function mult(a, b) {
    return a * b;
  }
  function spl(a, b) {
    if (a > b) {
      return a / b;
    }
    return b / a;
  }

  function mathOperation(arg1, arg2, operation) {
    switch (operation) {
      case "+": return sum(arg1, arg2);
      case "-": return min(arg1, arg2);
      case "*": return mult(arg1, arg2);
      case "/": return spl(arg1, arg2);
      default: return NaN;
    }
  }
  // Здесь пишем решение, данный комментарий необходимо стереть.
</script>
</body>
</html>



4 задание
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Необходимо реализовать четыре функции, каждая функция должна принимать по два
числа и выполнять одну из операций (каждая функция выполняет одну из них):
1. Сложение
2. Разность
3. Умножение
4. Деление

Необходимо сделать так, чтобы функция вернула число, например выражение
`console.log(sum(2, 6));` должно вывести число 8 в консоль (sum - функция
сложения в данном примере, ваши названия функций могут отличаться).

Округлять значения, которые возвращают функции не нужно, однако, обратите
внимание на разность, функция должна вычесть из большего числа меньшее, либо
вернуть 0, если числа равны.

Функциям всегда передаются корректные числа, проверки на NaN, Infinity делать
не нужно.

Необходимо для всех функций прописать комментарии jsdoc https://jsdoc.app/.
-->
<script>
  "use strict";
  function sum(a, b) {
    return a + b;
  }
  function min(a, b) {
    if (a > b) {
      return a - b;
    }
    return b - a;
  }
  function mult(a, b) {
    return a * b;
  }
  function spl(a, b) {
    if (a > b) {
      return a / b;
    }
    return b / a;
  }
  // Здесь пишем решение, данный комментарий необходимо стереть.
</script>
</body>
</html>




3 задание 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Необходимо попросить пользователя ввести два числа в переменные `a` и `b`.
Необходимо вывести в консоль один результат из следующих проверок:
1. Если оба числа в переменных `a` и `b` положительные, вывести разность
чисел `a` и `b`, а именно, вычесть из переменной `a` значение переменной `b`.
2. Если оба числа в переменных `a` и `b` отрицательные, вывести произведение
чисел `a` и `b`.
3. Если числа в переменных `a` и `b` разных знаков, вывести сумму чисел
`a` и `b`.
В остальных случаях программа не должна ничего выводить.
-->
<script>
  "use strict";
    const numA = +prompt('Введите первое число ');
    const numB = Number(prompt('Введите первое число '));
    if (numA >= 0 && numB >= 0) {
      console.log(numA - numB);
    } else if (numA < 0 && numB < numB) {
      console.log(numA * numB);
    } else if (numA * numB < 0) {
      console.log(numA + numB);
    }



  // Здесь пишем решение, данный комментарий необходимо стереть.
</script>
</body>
</html>




2 задание
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Для кода вставленного в теге script необходимо дать комментарии, почему мы
получаем такой результат (в свободной форме).

Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в
браузере со включенными точками остановки.
-->
<script>
  "use strict";

  let a = 2;
  let x = 1 + (a *= 2);

  /*
  1. а = 4 ,так как let  можно изменить и во вторм действие мы умножили а на 2 и получили 4
  2. х = 1 + (2*2)=5   (a *= 2)=   а=4
   */
  console.log(x);
  console.log(a);

</script>
</body>
</html>


1 задание я посмотрел в ответах так что не я его писал

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Homework</title>
</head>
<body>
<!--
Обязательное задание.

Для кода вставленного в теге script необходимо дать комментарии, почему мы
получаем такой результат (в свободной форме).

Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в
браузере со включенными точками остановки.
-->
<script>
  "use strict";

  let a = 1, b = 1, c, d;

  /*
   Начальные данные на момент выполнения:
   a === 1,
   b === 1,
   c === undefined
   d === undefined

   1. К переменной `a` прибавится единица, так как стоит унарный оператор
   преинкремента, в переменной `a` будет лежать 2.
   2. В переменную `c` присвоится значение переменной `a`, т.е. в переменной `c`
   тоже будет лежать 2.
   */
  c = ++a;
  console.log(c); // 2

  /*
   Начальные данные на момент выполнения:
   a === 2,
   b === 1,
   c === 2
   d === undefined

   1. К переменной `b` прибавится единица, так как стоит унарный оператор
   постинкремента, в переменной `b` будет лежать 2.
   2. В переменную `c` присвоится значение переменной `b` до увеличения, так как
   инкремент был в постфиксной форме, то есть переменной `d` будет присвоено
   значение 1.
   */
  d = b++;
  console.log(d); // 1

  /*
   Начальные данные на момент выполнения:
   a === 2,
   b === 2,
   c === 2
   d === 1

   1. К переменной `a` прибавится единица, т.е. в переменной `a` будет лежать 3.
   2. Произойдет сложение 2 + переменной `a`, т.е. 2 + 3, получим 5 и эта
   пятерка присвоится в переменную `c`.
   */
  c = 2 + ++a;
  console.log(c); // 5

  /*
   Начальные данные на момент выполнения:
   a === 3,
   b === 2,
   c === 5
   d === 1

   1. К переменной `b` прибавится единица, так как стоит унарный оператор
   постинкремента, в переменной `b` будет лежать 3.
   2. К числу 2 прибавится значение переменной `b`, которое лежало в данной
   переменной до инкремента, т.е. 2. При сложении 2 + 2, получим 4.
   3. Четверка, которую получили во втором пункте, присвоится в переменную `d`.
   */
  d = 2 + b++;
  console.log(d); // 4

  /*
   Начальные данные на момент выполнения:
   a === 3,
   b === 3,
   c === 5
   d === 4
   */
  console.log(a); // 3
  console.log(b); // 3
</script>
</body>
</html>
